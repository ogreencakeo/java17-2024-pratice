1. 자바 기본 코드
public class App{
    public static void main(String[] args){
        System.out.println("Hello, World!");
    }
}

public      접근 제한자, 접근 제한 지시자, 접근 제어자
            객체가 가진 고유의 멤버 메서드, 필드 값을 외부에서 권한 없이 함부로 변경하는 것을 막기 위해
            public : 접근 제한 X / private : 클래스 내에서만 접근 O
static      인스턴스 생성 없이 프로그램 시작과 함께 사용하기 위해서 선언한 키워드
void        단어 자체의 뜻 -> 텅빈(a); 빈 공간(n) -> 즉, 함수 호출에 따른 반환값이 없다라는 의미
String[]    문자열 배열, import 없이 사용이 가능
System      시스템 클래스, import 없이도 사용 가능, java.lang 패키지는 기본 포함
out         시스템 클래스의 하위 객체  
println     상위에서 호출하여 사용할 수 있는 메서드 ~> 인자가 없이도 호출 가능, 문자열 값을 넣어서도 호출이 가능


2. new
- 먼저 class에 대해서 내가 남한테 설명할 수 있는지 생각해보자 ~> 앞서 강의 복습
- 클래스란 무엇인가?
    클래스를 비유해서 부르는 다른 명칭들 ? -> 틀, 설계도, 공장
    클래스와 뗄 수 없는 키워드 하나 -> 객체
    이러한 키워들에 대해서 설명할 수 있는가? 
- 객체란 무엇인가 ? 인스턴스란 무엇인가 ?
- 이 둘은 사실상 거의 같은 말 (젊은이 vs 청년) -> 비기너 입장에서는 그냥 같은 표현이다.. 라고 생각해도 무방
- 결국 이러한 것들을 이해하고 알아가는 과정이 곧 new에 대해서 설명하는 것

3. class란 무엇인가?
- 뭔가를 만들어내기 위한 틀, 공장, 설계도
- 이 뭔가가 바로 -> 객체 -> 자바는 이러한 객체들을 만들어 프로그램을 구동시키는 프로그래밍 언어
- 자바 -> 객체 지향 프로그래밍 언어 (OOP)
- 따라서, 클래스란 객체를 만들어 내기 위한 -> 틀, 설계도, 공장
- 객체를 만들어 내기 위해서는 상태와 동작을 정의해야 하는데 그러한 것들을 정의해 놓은 변수, 메서드들의 집합체

4. 객체란 무엇인가?
- 우리가 사는 세상 말고, 컴퓨터 프로그램이 구동되는 세상(?)에 만들어져야 하는 구현 대상체
- 결국, 이 객체는 내가 설계한 클래스에 의해서 구현되고 생성
- 그렇기에 흔히 클래스의 "인스턴스"라고도 부름
- instance : 사례, 실례, 예증(example)

5. 어떻게 객체를 만드나?
- 가만히 생각해보면 객체는 무엇을 만들더라도 그 객체가 가지고 있는 "특징"이라는게 있음
- 그러한 특징을 객체를 만들어내는 클래스를 설계할 때 적절히 반영해주면 됨
- 대표적인 특징은 ?
    - 1. 객체는 상태 정보를 가지고 있다.
    - 2. 객체는 동작 정보를 가지고 있다.
- 상태 ? 동작 ?
    - AI 로봇을 만든다면?
    - 상태는 ? -> 이름, 나이, 성별, 성격 등 -> 클래스내에서 변수, 상수로 정의할 수 있음
    - 동작은 ? -> 걷다, 뛰다, 웃다, 울다, 청소하다 등 -> 클래스 내에서 메서드(함수)로 정의할 수 있음
- 상태는 클래스내에서 변수, 상수로 정의하며 주로 동사를 많이 사용
- 동작은 클래스내에서 메서드(함수)로 정의하며 주로 동사를 많이 사용 -> printSpec()
- 인터페이스 -> 형용사를 보통 사용 -> ~~able -> Runnable, Printable
