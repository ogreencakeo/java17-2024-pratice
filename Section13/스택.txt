[ 스택 ]
- Stack 클래스는 Vector 클래스를 상속받아 만들어진 것
- 후입선출 방식의 LIFO 방식으로 데이터 처리가 이루어지는 자료구조 형태
LIFO : Last In, First Out
쉽게 말해, 가장 나중에 저장됨(push) 데이터가 가장 먼저 나오게(pop) 되는 자료구조

[ 스택 예 ]
- Undo(언두) 기능           a   b   c   d
- 브라우저 뒤로가기, 역순으로 글자 출력하기 등등 ... 

[ 주요 메서드 ]
- 각 메서드는 이름만 봐도 대충은 알 수 있으나 정확히 아는 것이 중요!
push()       스택의 맨 위에 요소 추가
pop()        스택의 맨 위에 있는(맨 마지막에 저장된) 요소를 반환하고, 해당 요소를 스택에 삭제
peek()       스택의 맨 위에 있는(맨 마지막에 저장된) 요소를 반환
empty()      스택이 비어있는지 체크하여 비었으면 true, 아니면 false 반환
search()     위치 반환 (주의! 맨 위에 위치해 있는 요소가 1부터 시작함)
size()       
clear()

[ 스택 구현시 주로 사용하는 클래스 ]
- Stack 클래스를 사용해도 되나, 더 빠른 스택 구현을 위해서 deque 인터페이스를 구현한 ArrayDeque 클래스를 사용하곤 함
- ArrayDeque 클래스는 자료구조의 스택과 큐를 모두 구현할 수 있다. (단, 제한되는 메서드도 있음을 기억)