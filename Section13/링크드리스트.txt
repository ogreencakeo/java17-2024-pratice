[ 링크드리스트 ]
- java.util 패키지에 소속, import 필요
- Iterable <-- Collection <-- List[Set/Queue] <-- LinkedList 클래스

[ 배열리스트 vs 링크드리스트 ]
- 사용하는 메서드가 거의 같다.
- 배열리스트는 내부적으로 배열을 이용하는 자료구조이자만, 링크드리스트는 노드를 이용하여 데이터를 저장, 관리
    (노드는 곧 데이터, 여기에 다음 요소를 가르키는 참조 링크도 같이 가지고 있다고 보면 됨)
- 쉽게 말해, 배열은 순차적으로 요소(데이터)가 저장되지만, 링크드리스트는 각각의 요소들을 로 연결하기 때문에,
    요소들이 순차적이지 않더라도 다음 요소를 가리키는 링크로 인해서 순차적인 관리가 가능

[ 링크드리스트 장점 ]
- 각 노드가 다음 요소를 가리키는 값만 가지고 있으면 되므로 요소의 등이 빠르게 처리
    (다음 요소를 가리키는 참조 값만 변경하면 되기 때문에...)
- 요소의 추가, 삭제 시 빠른 장점을 가지고 있어 보다 선호되는 경향이 있다.
- 배열은 요소에 접근하는 것은 효율적이나, 추가나 삭제 시 그 뒤에 있는 모든 요소를 업데이트하는 처리가 필요해서 이러한 비용이 발생
- 링크드리스트는 검색에 있어서는 다소 느린편

- 일반적으로, 배열리스트는 중간에 요소를 추가/삭제하랴고 하면 그다지 고속으로 처리되지 못한다(?)
- 그래서 리스트 중간에 요소의 추가/삭제가 빈번하면 링크드리스트 사용을 권장(?)
- 어디까지나 일반적인 얘기들이고 컴퓨터 성능, 메모리, 코드 최적화, 앞/뒤/중간 어디냐에 따라서 많이 다름