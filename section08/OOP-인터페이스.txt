인터페이스를 한 마디로 표현한다면?
- 설계도

인터페이스란 무엇인가?
- 상속 관계가 아닌 어떤 클래스에 기능이나 동작(메서드)을 제공하고자 할 때 사용하는 문법적 장치
- 일반적으로 상속(extends)을 통해서 클래스에 메서드를 제공하는데 단일상속만 가능하기 때문에 다른 문법적 장치가 필요
- 쉽게 말해, 클래스를 통한 다중상속이 안되게끔 자바를 만들었는데 다중상속의 이점을 포가할 수 없다보니..
- 인터페이스를 이용하면 다중상속의 효과를 볼 수 있음 (다중상속 효과를 보기 위한 문법적 장치)

추상 클래스는 앞서 배운 상속의 개념을 보다 더 추상화하여 고도화시킨 문법적 장치
인터페이스는 이를 더 고도화시킨 문법적 장치
자바에서 다형성을 위해서 사용되는 문법적 장치가 다양한데 이러한 다형성을 구현하기 위해서 만들어진 문법적 장치
배열하면 반복문처럼 인터페이스하면 다형성을 자연스럽게 같이 연결

사용법
- 클래스 정의하듯이 사용하면 됨 -> 단, class 키워드가 아닌 interface 키워드 사용하여 정의
- 일단, 클래스처럼 보이지만, class 키워드를 사용하지 않고 interface 키워드를 사용
- 클래스처럼 보이는 이유는 변수, 메서드 등을 사용하기 때문

- 상속에서 사용하는 extends 키워드 대신에 interface를 구현한다라는 의미로 implements 키워드 사용
- 구현(상속)할 때는 -> implements 키워드 사용 (extends 사용하는 것처럼 생각)

- 상속은 단일 상속만 가능하지만, 인터페이스는 다중상속이 가능하므로 몇 개라도 구현(상속)할 수 있음
- 구현한다라는게 어색하면 "구현(상속) 받을 수 있다"라고 생각하면 이해가 조금 쉬움
- 인터페이스 구현체(클래스)에서는 반드시 인터페이스에 정의된 추상 메서드를 구현해야 함 -> 메서드 오버라이딩
- 보통 개발툴에서 자동으로 오버라이딩 해야하는 메서드를 삽입해주는 기능을 제공