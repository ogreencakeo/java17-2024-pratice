[ TreeSet 자료구조 클래스 ]
- 사용도 조금 까다로운데, 기본적으로 (1) 내부 동작이나 (2) 메서드 알아야 할게 많아서 어렵게 느낌
- TreeMap 공부를 쉽게 하기 위해서 잘 이해하는게 중요!
- 실제로, java.util 패키지에 있는 수 많은 자료구조 클래스를 사용법만 알아도 개발 시간 단축
- 하지만, 혼자 공부하기에는 어렵고 시간도 많이 걸리는게 사실
- Collection 계층 구조를 다시 한 번 체크해야함

TreeSet은 중복된 요소를 허용하지 않으며, 
이진 검색 트리(Binary Search Tree)의 성질을 가지므로 삽입, 삭제, 검색 연산의 시간 복잡도가 O(log N)이다. 
따라서 큰 데이터셋에서 성능이 우수하게 유지된다.

[ 매우 중요 ]
- Tree로 시작하는 자료구조 클래스는 데이터 저장 시 자동 정렬이 되어진다.
- 이러한 이유로 어떤 객체를 Tree형 자료구조에 저장할 때는 반드시 순서를 결정할 수 있어야 한다.
- 이러한 순서를 결정하기 위해서 Comparable인터페이스를 구현해 놓아야만 한다.

[ 코드 ]
class Person implements Comparable<Person> {
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @Override
    public int compareTo(Person other) {
        // 나이 순으로 정렬하기
        return Integer.compare(this.age, other.age);
    }

    @Override
    public String toString() {
        return "Person{" +
                "name='" + name + '\'' +
                ", age=" + age +
                '}';
    }
}
